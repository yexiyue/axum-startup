use axum::{response::IntoResponse, routing::get, Extension, Router};
use axum_mongodb::preload::*;
use mongodb::Database;
{%- if logs %}
use tower_http::trace::{self, TraceLayer};
use tracing::Level;
{%- endif %}
mod todos;
use crate::todos::todos_router;
use todos::Todo;

#[axum_mongodb::main]
pub async fn start(db: Database) -> Router {
    let mongodb_server = MongoDbServer::<Servers>::new(db).await;

    Router::new()
        .route("/", get(hello_world))
        .merge(todos_router())
        {%- if logs %}
        .layer(
            TraceLayer::new_for_http()
                .make_span_with(trace::DefaultMakeSpan::new().level(Level::INFO))
                .on_response(trace::DefaultOnResponse::new().level(Level::INFO))
                .on_failure(trace::DefaultOnFailure::new().level(Level::ERROR)),
        )
        {%- endif %}
        .layer(Extension(mongodb_server))
}

async fn hello_world() -> impl IntoResponse {
    "hello world"
}
